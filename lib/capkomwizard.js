// Generated by CoffeeScript 1.3.1
(function() {
  var Capkom, loadSymbolset, _base, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;

  jQuery.widget("capkom.ttswidget", {
    options: {
      language: "de",
      backendUri: "http://dev.iks-project.eu/mary",
      backendType: "MARY",
      spinnerUri: "spinner.gif",
      dialogTitle: "TTS widget",
      defaultText: "No text found",
      buttonLabel: "Speak",
      errorMsg: "Error loading audio."
    },
    _create: function() {
      var _this = this;
      this.button = jQuery("<button class='tts-button' alt='" + this.options.buttonLabel + "'><i class='icon-volume-up'/></button>");
      this.button.prependTo(this.element);
      this.button.button({
        text: true
      });
      return this.button.click(function(e) {
        e.preventDefault();
        _this.talk();
        return false;
      });
    },
    _destroy: function() {
      this._cleanup();
      return jQuery(this.button).button("destroy").remove();
    },
    prepare: function() {
      return this._cleanup();
    },
    talk: function() {
      var audioSnippet,
        _this = this;
      this.prepare();
      audioSnippet = null;
      if (jQuery.browser.msie) {
        audioSnippet = "<OBJECT id='playera' height='40' width='230' classid='clsid:22D6F312-B0F6-11D0-94AB-0080C74C7E95'>\n    <embed src='" + (this._makeLink()) + "' name='playera' width='230' height='40' pluginspage='http://www.microsoft.com/windows/windowsmedia/' type='application/x-mplayer2' autoplay='true' showcontrols='1' fullScreen='false' DisplaySize='0' autostart='true' controls='All' controller='true'></embed>\n    <PARAM NAME='AutoStart' VALUE='True'/>\n    <PARAM NAME='Filename' VALUE='" + (this._makeLink()) + "'/>\n    <PARAM NAME='Mute' VALUE='False'/>\n    <PARAM NAME='SendPlayStateChangeEvents' VALUE='True'/>\n    <PARAM NAME='ShowControls' VALUE='True'/>\n    <PARAM NAME='ShowAudioControls' VALUE='True'/>\n    <PARAM NAME='Volume' VALUE='1'/>\n    <PARAM NAME='AutoSize' VALUE='True'/>\n</OBJECT>";
      } else {
        audioSnippet = "<audio id='ttswidget-audio' controls='controls' style='' src='" + (this._makeLink()) + "'\n    type='audio/mpeg'>Your browser does not support the audio tag.\n</audio>\n<img class='spinner' src='" + this.options.spinnerUri + "'/>";
      }
      this.dialog = jQuery("<div id='ttswidget-dialog' title='" + this.options.dialogTitle + "'>\n    " + (this._getText()) + "\n    <br/><br/>\n    " + audioSnippet + "\n</div>");
      this.dialog.appendTo(jQuery("body"));
      this.dialog.dialog({
        close: function() {
          return setTimeout(function() {
            return _this._cleanup();
          }, 500);
        },
        hide: "fade",
        width: "500"
      });
      if (jQuery.browser.msie) {
        return document.playera.attachEvent("EndOfStream", function(state) {
          _this.dialog.dialog("close");
          return setTimeout(function() {
            return _this._cleanup();
          }, 500);
        });
      } else {
        this.audioElement = jQuery("#ttswidget-audio")[0];
        this.audioElement.onabort = function() {
          return typeof console !== "undefined" && console !== null ? console.error(attributes) : void 0;
        };
        this.audioElement.load();
        this.audioElement.play();
        jQuery(this.audioElement).bind('playing', function() {
          return jQuery(".spinner", _this.dialog).hide();
        });
        jQuery(this.audioElement).bind('ended', function() {
          _this.dialog.dialog("close");
          return setTimeout(function() {
            return _this._cleanup();
          }, 500);
        });
        return jQuery(this.audioElement).bind('error', function(e) {
          var errorHtml;
          errorHtml = "<br/>\n<div style=\"color: red\">\n    <span class=\"ui-icon ui-icon-alert\" style=\"float:left; margin:0 7px 20px 0;\"></span>" + _this.options.errorMsg + "\n</div>";
          return _this.dialog.append(errorHtml);
        });
      }
    },
    _cleanup: function() {
      return jQuery("#ttswidget-dialog").dialog("destroy").remove();
    },
    _getText: function() {
      if (this.element.attr("tts")) {
        return this.element.attr("tts");
      }
      if (this.element.text()) {
        return this.element.not(this.button).text().replace("" + this.options.buttonLabel, "");
      }
      return this.options.defaultText;
    },
    _getLang: function() {
      if (this.element.attr("lang")) {
        return this.element.attr("lang");
      }
      if (this.options.lang) {
        return this.options.lang;
      }
    },
    _getGender: function() {
      if (this.element.attr("gender")) {
        return this.element.attr("gender");
      }
      if (this.options.gender) {
        return this.options.gender;
      }
    },
    preset: function(lang, gender) {
      var presets, res;
      if (lang == null) {
        lang = "en";
      }
      if (gender == null) {
        gender = "male";
      }
      presets = {
        "de-male": ["LOCALE=de", "VOICE=bits3"],
        "de-female": ["LOCALE=de", "VOICE=bits1-hsmm"],
        "en-male": ["LOCALE=en_GB", "VOICE=dfki-spike"],
        "en-female": ["LOCALE=en_GB", "VOICE=dfki-prudence"]
      };
      res = presets["" + lang + "-" + gender];
      if (!res) {
        if (typeof console !== "undefined" && console !== null) {
          console.error("There's no TTS preset defined for " + lang + " and " + gender + ".");
        }
      }
      return res || presets["de-female"];
    },
    _makeLink: function() {
      var params, res, text, uri, _encodeURI;
      _encodeURI = function(str) {
        return encodeURI(str).replace(/'/g, "%27");
      };
      text = this._getText();
      uri = this.options.backendUri + "/process?";
      params = this.preset(this._getLang(), this._getGender()).concat(["INPUT_TYPE=TEXT&OUTPUT_TYPE=AUDIO&INPUT_TEXT=" + (_encodeURI(text)), "OUTPUT_TEXT=", "effect_Volume_selected=", "effect_Volume_parameters=" + encodeURI("amount:2.0;"), "effect_Volume_default=Default", "effect_Volume_help=Help", "effect_TractScaler_selected=", "effect_TractScaler_parameters" + encodeURI("amount:1.5;"), "effect_TractScaler_default=Default", "effect_TractScaler_help=Help", "effect_F0Scale_selected=", "effect_F0Scale_parameters=" + encodeURI("f0Scale:2.0;"), "effect_F0Scale_default=Default", "effect_F0Scale_help=Help", "effect_F0Add_selected=", "effect_F0Add_parameters=" + encodeURI("f0Add:50.0;"), "effect_F0Add_default=Default", "effect_F0Add_help=Help", "effect_Rate_selected=", "effect_Rate_parameters=" + encodeURI("durScale:1.5;"), "effect_Rate_default=Default", "effect_Rate_help=Help", "effect_Robot_selected=", "effect_Robot_parameters=" + encodeURI("amount:100.0;"), "effect_Robot_default=Default", "effect_Robot_help=Help", "effect_Whisper_selected=", "effect_Whisper_parameters=" + encodeURI("amount:100.0;"), "effect_Whisper_default=Default", "effect_Whisper_help=Help", "effect_Stadium_selected=", "effect_Stadium_parameters=" + encodeURI("amount:100.0"), "effect_Stadium_default=Default", "effect_Stadium_help=Help", "effect_Chorus_selected=", "effect_Chorus_parameters=" + encodeURI("delay1:466;amp1:0.54;delay2:600;amp2:-0.10;delay3:250;amp3:0.30"), "effect_Chorus_default=Default", "effect_Chorus_help=Help", "effect_FIRFilter_selected=", "effect_FIRFilter_parameters=" + encodeURI("type:3;fc1:500.0;fc2:2000.0"), "effect_FIRFilter_default=Default", "effect_FIRFilter_help=Help", "effect_JetPilot_selected=", "effect_JetPilot_parameters=", "effect_JetPilot_default=Default", "effect_JetPilot_help=Help", "HELP_TEXT=", "VOICE_SELECTIONS=bits3%20de%20male%20unitselection%20general", "AUDIO_OUT=WAVE_FILE", "AUDIO=WAVE_FILE"]);
      res = uri + params.join('&');
      return res;
    }
  });

  Capkom = (_ref = this.Capkom) != null ? _ref : this.Capkom = {};

  jQuery.widget("Capkom.capkomSymbol", {
    options: {
      profile: Capkom.profile,
      symbolSets: Capkom.symbolSets,
      symbolId: "default",
      uriPrefix: ""
    },
    _create: function() {
      var _base, _profileChange,
        _this = this;
      if ((_base = this.options).symbolSets == null) {
        _base.symbolSets = Capkom.symbolSets;
      }
      this.symbolId = this.element.attr("symbolId" || this.options.symbolId);
      this.symbol = jQuery('<img class="capkom-symbol" style="padding-right:5px;vertical-align:middle;display:none;"/>&nbsp;');
      this.symbol.prependTo(this.element);
      this.symbol = jQuery('img.capkom-symbol', this.element);
      this.symbol.hide();
      this._profileChange(this.options.profile);
      _profileChange = function(profile) {
        return _this._profileChange.apply(_this, [profile]);
      };
      return this.options.profile.bind('change', _profileChange);
    },
    _destroy: function() {
      return this.symbol.remove();
    },
    _profileChange: function(profile) {
      var symbolUri;
      symbolUri = this._getSymbolUri(profile, this.options.symbolSets);
      this.symbol.attr('src', symbolUri);
      if (profile.get('useSymbols') || this.element.attr('donthidesymbol')) {
        return this.symbol.show();
      } else {
        return this.symbol.hide();
      }
    },
    _getSymbolUri: function(profile, sets) {
      var preferredSet, symbolSet, symbolSetRanking, symbolSize, symbolUri,
        _this = this;
      preferredSet = this.options.symbolSets[profile.get('symbolSet')];
      symbolSetRanking = _.union([preferredSet], sets.sets);
      symbolSet = _.detect(symbolSetRanking, function(symbolSet) {
        return symbolSet.hasSymbol(_this.symbolId);
      });
      if (!symbolSet) {
        console.error("No symbolset found for " + this.symbolId);
        return "";
      }
      symbolSize = profile.get('symbolsize') || 'medium';
      return symbolUri = this.options.uriPrefix + symbolSet.getSymbolUri(this.symbolId, symbolSize);
    }
  });

  jQuery.widget("capkom.fontsize", {
    options: {
      min: 1,
      max: 8,
      value: 1,
      styleClass: "fontsize-widget",
      change: function(val) {
        return Capkom.console.info("fontsize value:", val);
      }
    },
    _create: function() {
      var i, _i, _ref1, _ref2,
        _this = this;
      this.element.addClass(this.options.styleClass);
      for (i = _i = _ref1 = this.options.min, _ref2 = this.options.max; _ref1 <= _ref2 ? _i <= _ref2 : _i >= _ref2; i = _ref1 <= _ref2 ? ++_i : --_i) {
        this.element.append(jQuery("<input type='radio' name='fontsize' id='fontsize-s" + i + "' />\n<label for='fontsize-s" + i + "' ><span class='fontsize-s" + i + " choose-button'>AAA</span></label>"));
      }
      Capkom.console.log(this.element, "created.");
      this._setValue(this.options.value);
      return this.buttonset = jQuery(this.element).buttonset({
        styleclass: "fontsize-buttons"
      }).change(function(e) {
        return _this.options.change(_this.options.value = e.target.id.replace("fontsize-s", ""));
      });
    },
    _destroy: function() {
      return this.element.removeClass(this.options.styleClass);
    },
    _setOption: function(key, value) {
      switch (key) {
        case "value":
          return this._setValue(value);
      }
    },
    _setValue: function(val) {
      var _ref1;
      jQuery("#fontsize-s" + val).attr("checked", "checked");
      if ((_ref1 = this.buttonset) != null) {
        _ref1.buttonset('refresh');
      }
      return this.options.value = val;
    }
  });

  Capkom = (_ref1 = this.Capkom) != null ? _ref1 : this.Capkom = {};

  if (Capkom.symbolSets == null) {
    Capkom.symbolSets = {};
  }

  if ((_base = Capkom.symbolSets).sets == null) {
    _base.sets = [];
  }

  /*
  Generic symbol set class
  */


  Capkom.Symbolset = (function() {

    Symbolset.name = 'Symbolset';

    function Symbolset(options) {
      this.options = options;
      this.name = options.name;
      this.nameMap = options.nameMap;
      this.baseUri = options.baseUri;
      this.nameFormat = options.nameFormat;
      this.sizeMap = options.sizeMap;
      this.symbols = options.symbols;
      Capkom.symbolSets[options.name] = this;
      Capkom.symbolSets.sets.push(this);
    }

    Symbolset.prototype.getSymbolUri = function(symbolId, symbolSize) {
      var imageName;
      imageName = this.nameFormat.replace("{symbolId}", this._applyMapping(symbolId, this.nameMap)).replace("{size}", this._applyMapping(symbolSize, this.sizeMap));
      return this.baseUri + imageName;
    };

    Symbolset.prototype.hasSymbol = function(symbolId) {
      var symbolName;
      if (this.nameMap) {
        symbolName = this._applyMapping(symbolId, this.nameMap);
      }
      if (_.contains(this.symbols, symbolName)) {
        return true;
      }
    };

    Symbolset.prototype._applyMapping = function(str, mapping) {
      return mapping[str] || str;
    };

    return Symbolset;

  })();

  Capkom = (_ref2 = this.Capkom) != null ? _ref2 : this.Capkom = {};

  if (console) {
    Capkom.console = console;
  } else {
    Capkom.console = {
      info: function() {},
      error: function() {},
      debug: function() {},
      log: function() {}
    };
  }

  Capkom.waitForMe = function() {
    var i;
    if (this._wait == null) {
      this._wait = [];
    }
    i = this._wait.length;
    Capkom.console.debug("Waiting for #" + i + "..");
    this._wait[i] = {
      ready: false
    };
    return function() {
      Capkom.console.debug("#" + i + " is ready");
      Capkom._wait[i].ready = true;
      return Capkom._oneDone();
    };
  };

  Capkom.once = function(cb) {
    this._once[this._once.length] = {
      done: false,
      cb: cb
    };
    return this._oneDone();
  };

  if (Capkom._once == null) {
    Capkom._once = [];
  }

  Capkom._oneDone = function() {
    var once, stillWaiting, _i, _len, _ref3, _results;
    stillWaiting = _(this._wait).detect(function(w) {
      return !w.ready;
    });
    if (!stillWaiting) {
      _ref3 = Capkom._once;
      _results = [];
      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
        once = _ref3[_i];
        if (!once.done) {
          once.done = true;
          _results.push(once.cb());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  };

  jQuery(document).ready(function() {
    return _.defer(function() {
      return Capkom.once(function() {
        Capkom.loadProfile(function() {
          Capkom.initNav();
          Capkom.updateTTS();
          return jQuery('.capkom-label').capkomSymbol({
            profile: Capkom.profile
          });
        });
        return jQuery('#loadingDiv').ajaxStart(function() {
          return jQuery(this).show();
        }).ajaxStop(function() {
          return jQuery(this).hide();
        });
      });
    });
  });

  Capkom.getStagename = function() {
    return window.location.hash.replace(/^#/, "");
  };

  Capkom.updateTTS = function() {
    if (Capkom.uiLoaded) {
      if (Capkom.profile.get("useAudio")) {
        return jQuery(".tts").ttswidget({
          spinnerUri: "css/spinner.gif",
          dialogTitle: "Sprechblase"
        });
      } else {
        return jQuery(":capkom-ttswidget").ttswidget("destroy");
      }
    }
  };

  if (!this.console) {
    this.console = {
      debug: function() {},
      info: function() {},
      log: function() {},
      error: function() {}
    };
  }

  Capkom = (_ref3 = this.Capkom) != null ? _ref3 : this.Capkom = {};

  loadSymbolset = function(url) {
    var cb;
    cb = Capkom.waitForMe();
    return jQuery.ajax({
      url: url + "/symbolset.json",
      dataType: "text",
      success: function(res) {
        res = JSON.parse(res);
        new Capkom.Symbolset(res);
        return cb();
      },
      error: function(err) {
        Capkom.console.error(err);
        return cb();
      }
    });
  };

  loadSymbolset("symbols/free1");

  loadSymbolset("symbols/capkom");

  Capkom = (_ref4 = this.Capkom) != null ? _ref4 : this.Capkom = {};

  Capkom.order = ["welcome", "fontsize", "symbolsize", "theme", "channels", "symbolset", "goodbye"];

  Capkom.stages = {
    "welcome": {
      title: "Willkommen",
      image: "http://www.greeting-cards-4u.com/tubes/CharlyBrown/snoopy.gif",
      speech: "Willkommen zum Kunstportal CAPKOM!\nHallo, ich heisse Wizi.\nIch möchte euch nun ein paar Fragen zur Bedienung des Kunstportals stellen.\nDies wird nur einige Minuten in Anspruch nehmen.",
      html: "Willkommen zum Kunstportal CAPKOM!<br/><br/>\nHallo, ich heiße Wizi. <br/>\nIch möchte euch nun ein paar Fragen zur Bedienung des Kunstportals stellen. <br/>\nDies wird nur einige Minuten in Anspruch nehmen."
    },
    "fontsize": {
      title: "Schriftgröße",
      image: "http://www.thepartyanimal-blog.org/wp-content/uploads/2010/09/Halloween-Snoopy5.jpg",
      speech: "Welche Schriftgröße ist für dich am angenehmsten?",
      html: "Welche Schriftgröße ist für dich am angenehmsten?<br/><br/>\n<div class='fontsize'></div>",
      script: function(element) {
        return jQuery(".fontsize").fontsize({
          value: Number(Capkom.profile.get('fontsize').replace("s", "")),
          change: function(val) {
            return Capkom.profile.set({
              'fontsize': "s" + val
            });
          }
        });
      }
    },
    "theme": {
      title: "Design",
      image: "http://www.balloonmaniacs.com/images/snoopygraduateballoon.jpg",
      speech: "Bitte bestimme nun das Bildschirmdesign. Wähle dazu jenes Design, das dir am besten gefällt.",
      html: "Bitte bestimme nun das Bildschirmdesign.<br/>\nWähle dazu jenes Design, das dir am besten gefällt.<br/><br/>\n<span id='themeselector'></span>",
      script: function(element) {
        return jQuery("#themeselector", element).themeswitcher({
          width: "5em",
          buttonHeight: 30,
          onSelect: function() {
            return Capkom.profile.set({
              "theme": $.cookie("jquery-ui-theme")
            });
          }
        });
      }
    },
    "channels": {
      title: 'Sprache/Symbole <img src="lib/ttswidget/speaker22.png" width="22" alt="Sprache"/>',
      image: "http://www.ecartooes.com/img/snoopy/peanuts_snoopy_11.jpg",
      speech: "Wie sollen Informationen dargestellt werden? Mit oder ohne Symbolen? Mit oder ohne Sprachausgabe?",
      html: "Wie sollen Informationen dargestellt werden?<br/><br/>\n<input type='radio' name='e2r' id='e2r-both'/>\n<label for='e2r-both' class='capkom-label' symbolId='text-with-symbols' donthidesymbol='true'>Text + Symbole</label>\n<input type='radio' name='e2r' id='e2r-alone'/>\n<label for='e2r-alone' class='capkom-label' symbolId='text-only' donthidesymbol='true'>Text</label>\n<br/><br/>\n<span symbolId='tts' class='capkom-label'>Sprachausgabe</span>:<br/><br/>\n<input type='radio' name='useAudio' id='audio-on'/>\n<label for='audio-on'>\n    <img src='symbols/Gnome-Audio-Volume-Medium-64.png' width='64' alt='Sprachausgabe an'/>\n</label>\n<input type='radio' name='useAudio' id='audio-off'/>\n<label for='audio-off'>\n    <img src='symbols/Gnome-Audio-Volume-Muted-64.png' width='64' alt='Keine Sprachausgabe'/>\n</label>",
      script: function(element) {
        if (Capkom.profile.get("useSymbols")) {
          jQuery("#e2r-both").attr("checked", "checked");
        } else {
          jQuery("#e2r-alone").attr("checked", "checked");
        }
        jQuery('#e2r-alone, #e2r-both').button().click(function() {
          var state;
          state = this.id.replace("e2r-", "");
          switch (state) {
            case "alone":
              return Capkom.profile.set({
                useE2r: true,
                useSymbols: false
              });
            case "both":
              return Capkom.profile.set({
                useE2r: true,
                useSymbols: true
              });
          }
        });
        if (Capkom.profile.get("useAudio")) {
          jQuery("#audio-on").attr("checked", "checked");
        } else {
          jQuery("#audio-off").attr("checked", "checked");
        }
        return jQuery('#audio-on, #audio-off').button().click(function() {
          var state;
          state = this.id.replace("audio-", "");
          switch (state) {
            case "on":
              return Capkom.profile.set({
                useAudio: true
              });
            case "off":
              return Capkom.profile.set({
                useAudio: false
              });
          }
        });
      }
    },
    "symbolset": {
      title: "<label symbol-id='symbolset'>Symbolsatz</label>",
      /*
               only show it if symbols are turned on
      */

      condition: function(profile) {
        return profile.get("useSymbols");
      },
      image: "http://www.gelsenkirchener-geschichten.de/userpix/1208/1208_snoopy006_3.gif",
      speech: "Welche Art der Symbole gefällt dir am besten?",
      html: "Welche Art der Symbole gefällt dir am besten?<br/>\nDu kannst dir später auch Deine eigenen Symbole schaffen, indem du eigene Bilder oder Fotos hochlädst.\n<div class='symbolset-symbols'></div>",
      script: function(element) {
        var html, symbolSet, symbolSetName, symbolSets, _i, _len;
        symbolSets = _.filter(Capkom.symbolSets.sets, function(symbolSet) {
          return symbolSet.hasSymbol("mainSymbol");
        });
        Capkom.console.info(symbolSets);
        for (_i = 0, _len = symbolSets.length; _i < _len; _i++) {
          symbolSet = symbolSets[_i];
          html = "<input type='radio' class='symbolset-selector " + symbolSet.name + "' name='symbolset' value='" + symbolSet.name + "' id='symbolset-" + symbolSet.name + "'/>\n<label for='symbolset-" + symbolSet.name + "'>\n    <img src='" + (symbolSet.getSymbolUri("mainSymbol", "large")) + "'/>\n</label>";
          jQuery(html).appendTo('.symbolset-symbols', element);
        }
        symbolSetName = Capkom.profile.get('symbolSet');
        jQuery('.symbolset-selector', element).filter("." + symbolSetName).attr("checked", "checked").end().button().click(function() {
          Capkom.console.log('click');
          return Capkom.profile.set({
            symbolSet: jQuery(this).val()
          });
        });
        return jQuery(".symbolset-symbols .symbolset-mainSymbol", element).find("." + symbolSet).addClass('selected').end().button();
      }
    },
    /*
         Definition of the symbol size selection screen
    */

    "symbolsize": {
      title: "Symbolgröße",
      condition: function(profile) {
        return profile.get("useSymbols");
      },
      image: "http://i.fonts2u.com/sn/mp1_snoopy-dings_1.png",
      html: "Die CAPKOM-Kunstplattform beinhaltet viele Symbole.<br/>\nWie groß sollen die Symbole sein? <br/><br/>\n<div class='symbolsize-symbols'>\n    <input type='radio' name='symbolsize' id='symbolsize-small' />\n    <label for='symbolsize-small' ><span class='symbolsize-small choose-button' title='klein'>\n        klein\n    </span></label>\n\n    <input type='radio' name='symbolsize' id='symbolsize-medium' />\n    <label for='symbolsize-medium'><span class='symbolsize-medium choose-button'>\n        mittelgroß\n    </span></label>\n\n    <input type='radio' name='symbolsize' id='symbolsize-large' />\n    <label for='symbolsize-large' ><span class='symbolsize-large'>\n        groß\n    </span></label>\n</div>",
      script: function(element) {
        var buttonset;
        jQuery("#symbolsize-" + (Capkom.profile.get('symbolsize'))).attr("checked", "checked");
        buttonset = jQuery(".symbolsize-symbols", element);
        buttonset.find('#symbolsize-small').button({
          text: false,
          icons: {
            secondary: 'ui-icon-symbol-small'
          }
        }).button('widget').css({
          width: "55px",
          height: "55px"
        });
        buttonset.find('#symbolsize-medium').button({
          text: false,
          icons: {
            secondary: 'ui-icon-symbol-medium'
          }
        }).button('widget').css({
          width: "80px",
          height: "80px"
        });
        buttonset.find('#symbolsize-large').button({
          text: false,
          icons: {
            secondary: 'ui-icon-symbol-large'
          }
        }).button('widget').css({
          width: "130px",
          height: "130px"
        });
        buttonset = buttonset.buttonset();
        buttonset.click(function(e) {
          return Capkom.console.info(e);
        });
        return buttonset.change(function(e) {
          return Capkom.profile.set({
            'symbolsize': e.target.id.replace("symbolsize-", "")
          });
        });
      }
    },
    "goodbye": {
      title: "Ende",
      image: "http://www.slowtrav.com/blog/teachick/snoopy_thankyou_big.gif",
      speech: "Dein Profil enthält nun Informationen, die ich jetzt trotzdem nicht vorlesen werde, weil sie nur für die Entwickler da sind.",
      html: "Vielen Dank für deine Zeit! <br/>\nDein Profil enthält nun folgende Informationen:<br/><br/>\n<div id=\"profile\"></div>",
      script: function(el) {
        var profileText;
        profileText = function() {
          return JSON.stringify(Capkom.profile.toJSON()).replace(/,"/g, ',<br/>"').replace(/^{|}$/g, "").replace(/":/g, '": ');
        };
        Capkom.profile.bind("change", function(profile) {
          return jQuery("#goodbye #profile").html(profileText());
        });
        return jQuery("#profile", el).html(profileText());
      }
    }
  };

  /*
  Get an array of stage objects in the configured order.
  */


  Capkom.getStages = function() {
    var i, res, stage, stagename;
    res = (function() {
      var _ref5, _results;
      _ref5 = Capkom.order;
      _results = [];
      for (i in _ref5) {
        stagename = _ref5[i];
        stage = Capkom.stages[stagename];
        stage.name = stagename;
        _results.push(stage);
      }
      return _results;
    })();
    res[0]._first = true;
    res[res.length - 1]._last = true;
    /* 
    Filter out the dependent and not-to-show stages based on `stage.condition`
    */

    return res = _(res).filter(function(stage) {
      if ((typeof stage.condition === "function" ? stage.condition(Capkom.profile) : void 0) !== false) {
        return true;
      }
    });
  };

  Capkom.showStages = function(el) {
    var an, anchor, anchorName, anchorNames, anchors, i, stage, stageNames, stages, _i, _j, _k, _len, _len1, _ref5, _ref6, _results, _results1;
    if (Capkom.uiLoaded) {
      stages = this.getStages();
      stageNames = _.map(stages, function(stage) {
        return stage.name;
      });
      anchors = jQuery(".stages").find("ul.titles").children();
      /*
              Remove not necessary tabs
      */

      _ref6 = (function() {
        _results = [];
        for (var _j = 0, _ref5 = anchors.length - 1; 0 <= _ref5 ? _j <= _ref5 : _j >= _ref5; 0 <= _ref5 ? _j++ : _j--){ _results.push(_j); }
        return _results;
      }).apply(this).reverse();
      for (_i = 0, _len = _ref6.length; _i < _len; _i++) {
        i = _ref6[_i];
        anchor = anchors[i];
        anchorName = jQuery(anchor).find("a").attr("href").replace(/^#/, "");
        /* anchorName not in stageNames?
        */

        if (_.indexOf(stageNames, anchorName) === -1) {
          jQuery(".stages").find("[href=#" + anchorName + "]").parent().hide();
        }
      }
      /*
              Return the current anchorNames
      */

      anchorNames = function() {
        return _.map(anchors, function(anchor) {
          return jQuery(anchor).find("a").attr("href").replace(/^#/, "");
        });
      };
      /*
              Add new tabs
      */

      _results1 = [];
      for (i = _k = 0, _len1 = stages.length; _k < _len1; i = ++_k) {
        stage = stages[i];
        an = anchorNames();
        if (_.indexOf(an, stage.name) === -1) {
          el.append(Capkom.renderStage(stage, jQuery(".stages"), i));
          el.tabs("add", "#" + stage.name, stage.title, i);
        }
        _results1.push($(".stages").find("[href=#" + stage.name + "]").parent().show());
      }
      return _results1;
    }
  };

  Capkom = (_ref5 = this.Capkom) != null ? _ref5 : this.Capkom = {};

  Capkom.Profile = Backbone.Model.extend();

  Capkom.profile = new Capkom.Profile;

  Capkom.profile.bind("change:fontsize", function(profile, fontsize) {
    var i, _i;
    for (i = _i = 1; _i <= 8; i = ++_i) {
      jQuery("body").removeClass("fontsize-s" + i);
    }
    return jQuery("body").addClass("fontsize-" + fontsize);
  });

  Capkom.profile.bind("change:theme", function(profile, theme) {
    var td, themeDetails;
    td = {};
    themeDetails = Capkom.themeMap[theme];
    _(themeDetails).each(function(v, k) {
      if (typeof v !== "string" || v.indexOf('.png') === -1) {
        return td[k] = v;
      }
    });
    if (profile.get('themeDetails') !== td) {
      Capkom.profile.set('themeDetails', td);
    }
    $.cookie("jquery-ui-theme", theme);
    return $("#bgThemeActivator").themeswitcher();
  });

  Capkom.profile.bind("change:useAudio", function(profile, audio) {
    return typeof Capkom.updateTTS === "function" ? Capkom.updateTTS() : void 0;
  });

  Capkom.profile.bind("change:useSymbols", function(profile, useSymbols) {
    if (typeof Capkom.showStages === "function") {
      Capkom.showStages(jQuery(".stages"));
    }
    return typeof Capkom.updateSymbols === "function" ? Capkom.updateSymbols() : void 0;
  });

  Capkom.profile.bind("change", function(profile) {
    return profile.save();
  });

  Backbone.sync = function(method, model) {
    localStorage.profile = JSON.stringify(model.toJSON());
    return Capkom.console.info("profile saved:", localStorage.profile);
  };

  Capkom.loadProfile = function(callback) {
    var setProfile;
    setProfile = function(profile) {
      if (typeof profile === "string") {
        profile = JSON.parse(profile);
      }
      Capkom.defaultProfile = profile;
      Capkom.profile.set(profile);
      return typeof callback === "function" ? callback() : void 0;
    };
    if (localStorage.profile) {
      return setProfile(localStorage.profile);
    } else {
      return jQuery.get("./default-profile.json", function(profile) {
        return _.defer(function() {
          return setProfile(profile);
        });
      });
    }
  };

  Capkom.initNav = function() {
    var i, stage, _ref6, _renderStageTitle;
    _renderStageTitle = function(stage) {
      return "<li><a class='stage-title capkom-label' symbolId='" + stage.name + "' href='#" + stage.name + "'>" + stage.title + "</a></li>";
    };
    _ref6 = Capkom.getStages();
    for (i in _ref6) {
      stage = _ref6[i];
      jQuery(".stages .titles").append(jQuery(_renderStageTitle(stage)));
      this.renderStage(stage, jQuery(".stages"));
    }
    jQuery(".stages").tabs({
      select: function(event, ui) {
        return window.location.hash = ui.tab.hash;
      }
    }).addClass('ui-tabs-vertical ui-helper-clearfix');
    return Capkom.uiLoaded = true;
  };

  Capkom.renderStage = function(stage, tabsEl, index) {
    var el, _renderStage,
      _this = this;
    _renderStage = function(stage) {
      var _ref6;
      return "<div id=\"" + stage.name + "\">\n    <table class=\"ui-widget-content\"><tr><td style=\"vertical-align: top;padding: 1em;\">\n        <div>\n            <img width=\"200\" class=\"stage-image " + ((_ref6 = stage.image) != null ? _ref6 : {
        '': 'hidden'
      }) + "\" alt=\"Wizard Bild\" src=\"" + stage.image + "\" />\n        </div>\n    </td><td>\n        <div style=\"padding: 5px 15px;\">\n            <span class=\"stage-content tts\" lang=\"de\">" + stage.html + "</span>\n        </div>\n        <div class=\"buttons\">\n            <button class=\"prevButton\" alt=\"Zurück\">\n                <i class=\"icon-arrow-left\"></i>\n                Zurück\n            </button>\n            <button class=\"nextButton\" alt=\"Weiter\">\n                Weiter\n                <i class=\"icon-arrow-right\"/>\n            </button>\n        </div>\n    </td></tr></table>\n</div>";
    };
    el = null;
    if (tabsEl.find(".ui-tabs-panel").length && index) {
      el = jQuery(_renderStage(stage)).insertBefore(jQuery(tabsEl.find(".ui-tabs-panel")[index]));
    } else {
      el = jQuery(_renderStage(stage)).appendTo(tabsEl);
    }
    if (stage.script) {
      stage.script(jQuery(".stage-content", el));
    }
    if (stage._first) {
      jQuery(".prevButton", el).hide();
    }
    if (stage._last) {
      jQuery(".nextButton", el).hide();
    }
    jQuery(".prevButton", el).button().click(function() {
      var newIndex;
      newIndex = jQuery(".stages").find("ul.titles .ui-tabs-active").prev().index();
      return jQuery(".stages").tabs("select", newIndex);
    });
    jQuery(".nextButton", el).button().click(function() {
      var newIndex;
      newIndex = jQuery(".stages").find("ul.titles .ui-tabs-active").next().index();
      return jQuery(".stages").tabs("select", newIndex);
    });
    if (stage.speech) {
      jQuery(".stage-content.tts", el).attr("tts", stage.speech);
    }
    return el;
  };

  Capkom.themeMap = {
    "UI lightness": {
      "ffDefault": "Trebuchet MS, Tahoma, Verdana, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "4px",
      "bgColorHeader": "f6a828",
      "bgTextureHeader": "12_gloss_wave.png",
      "bgImgOpacityHeader": "35",
      "borderColorHeader": "e78f08",
      "fcHeader": "ffffff",
      "iconColorHeader": "ffffff",
      "bgColorContent": "eeeeee",
      "bgTextureContent": "03_highlight_soft.png",
      "bgImgOpacityContent": "100",
      "borderColorContent": "dddddd",
      "fcContent": "333333",
      "iconColorContent": "222222",
      "bgColorDefault": "f6f6f6",
      "bgTextureDefault": "02_glass.png",
      "bgImgOpacityDefault": "100",
      "borderColorDefault": "cccccc",
      "fcDefault": "1c94c4",
      "iconColorDefault": "ef8c08",
      "bgColorHover": "fdf5ce",
      "bgTextureHover": "02_glass.png",
      "bgImgOpacityHover": "100",
      "borderColorHover": "fbcb09",
      "fcHover": "c77405",
      "iconColorHover": "ef8c08",
      "bgColorActive": "ffffff",
      "bgTextureActive": "02_glass.png",
      "bgImgOpacityActive": "65",
      "borderColorActive": "fbd850",
      "fcActive": "eb8f00",
      "iconColorActive": "ef8c08",
      "bgColorHighlight": "ffe45c",
      "bgTextureHighlight": "03_highlight_soft.png",
      "bgImgOpacityHighlight": "75",
      "borderColorHighlight": "fed22f",
      "fcHighlight": "363636",
      "iconColorHighlight": "228ef1",
      "bgColorError": "b81900",
      "bgTextureError": "08_diagonals_thick.png",
      "bgImgOpacityError": "18",
      "borderColorError": "cd0a0a",
      "fcError": "ffffff",
      "iconColorError": "ffd27a",
      "bgColorOverlay": "666666",
      "bgTextureOverlay": "08_diagonals_thick.png",
      "bgImgOpacityOverlay": "20",
      "opacityOverlay": "50",
      "bgColorShadow": "000000",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "10",
      "opacityShadow": "20",
      "thicknessShadow": "5px",
      "offsetTopShadow": "-5px",
      "offsetLeftShadow": "-5px",
      "cornerRadiusShadow": "5px"
    },
    "UI darkness": {
      "ffDefault": "Segoe UI, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "6px",
      "bgColorHeader": "333333",
      "bgTextureHeader": "12_gloss_wave.png",
      "bgImgOpacityHeader": "25",
      "borderColorHeader": "333333",
      "fcHeader": "ffffff",
      "iconColorHeader": "ffffff",
      "bgColorContent": "000000",
      "bgTextureContent": "05_inset_soft.png",
      "bgImgOpacityContent": "25",
      "borderColorContent": "666666",
      "fcContent": "ffffff",
      "iconColorContent": "cccccc",
      "bgColorDefault": "555555",
      "bgTextureDefault": "02_glass.png",
      "bgImgOpacityDefault": "20",
      "borderColorDefault": "666666",
      "fcDefault": "eeeeee",
      "iconColorDefault": "cccccc",
      "bgColorHover": "0078a3",
      "bgTextureHover": "02_glass.png",
      "bgImgOpacityHover": "40",
      "borderColorHover": "59b4d4",
      "fcHover": "ffffff",
      "iconColorHover": "ffffff",
      "bgColorActive": "f58400",
      "bgTextureActive": "05_inset_soft.png",
      "bgImgOpacityActive": "30",
      "borderColorActive": "ffaf0f",
      "fcActive": "ffffff",
      "iconColorActive": "222222",
      "bgColorHighlight": "eeeeee",
      "bgTextureHighlight": "03_highlight_soft.png",
      "bgImgOpacityHighlight": "80",
      "borderColorHighlight": "cccccc",
      "fcHighlight": "2e7db2",
      "iconColorHighlight": "4b8e0b",
      "bgColorError": "ffc73d",
      "bgTextureError": "02_glass.png",
      "bgImgOpacityError": "40",
      "borderColorError": "ffb73d",
      "fcError": "111111",
      "iconColorError": "a83300",
      "bgColorOverlay": "5c5c5c",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "50",
      "opacityOverlay": "80",
      "bgColorShadow": "cccccc",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "30",
      "opacityShadow": "60",
      "thicknessShadow": "7px",
      "offsetTopShadow": "-7px",
      "offsetLeftShadow": "-7px",
      "cornerRadiusShadow": "8px"
    },
    "Smoothness": {
      "ffDefault": "Verdana,Arial,sans-serif",
      "fwDefault": "normal",
      "fsDefault": "1.1em",
      "cornerRadius": "4px",
      "bgColorHeader": "cccccc",
      "bgTextureHeader": "03_highlight_soft.png",
      "bgImgOpacityHeader": "75",
      "borderColorHeader": "aaaaaa",
      "fcHeader": "222222",
      "iconColorHeader": "222222",
      "bgColorContent": "ffffff",
      "bgTextureContent": "01_flat.png",
      "bgImgOpacityContent": "75",
      "borderColorContent": "aaaaaa",
      "fcContent": "222222",
      "iconColorContent": "222222",
      "bgColorDefault": "e6e6e6",
      "bgTextureDefault": "02_glass.png",
      "bgImgOpacityDefault": "75",
      "borderColorDefault": "d3d3d3",
      "fcDefault": "555555",
      "iconColorDefault": "888888",
      "bgColorHover": "dadada",
      "bgTextureHover": "02_glass.png",
      "bgImgOpacityHover": "75",
      "borderColorHover": "999999",
      "fcHover": "212121",
      "iconColorHover": "454545",
      "bgColorActive": "ffffff",
      "bgTextureActive": "02_glass.png",
      "bgImgOpacityActive": "65",
      "borderColorActive": "aaaaaa",
      "fcActive": "212121",
      "iconColorActive": "454545",
      "bgColorHighlight": "fbf9ee",
      "bgTextureHighlight": "02_glass.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "fcefa1",
      "fcHighlight": "363636",
      "iconColorHighlight": "2e83ff",
      "bgColorError": "fef1ec",
      "bgTextureError": "02_glass.png",
      "bgImgOpacityError": "95",
      "borderColorError": "cd0a0a",
      "fcError": "cd0a0a",
      "iconColorError": "cd0a0a",
      "bgColorOverlay": "aaaaaa",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "0",
      "opacityOverlay": "30",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "30",
      "thicknessShadow": "8px",
      "offsetTopShadow": "-8px",
      "offsetLeftShadow": "-8px",
      "cornerRadiusShadow": "8px"
    },
    "Redmond": {
      "ffDefault": "Lucida Grande, Lucida Sans, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "5px",
      "bgColorHeader": "5c9ccc",
      "bgTextureHeader": "12_gloss_wave.png",
      "bgImgOpacityHeader": "55",
      "borderColorHeader": "4297d7",
      "fcHeader": "ffffff",
      "iconColorHeader": "d8e7f3",
      "bgColorContent": "fcfdfd",
      "bgTextureContent": "06_inset_hard.png",
      "bgImgOpacityContent": "100",
      "borderColorContent": "a6c9e2",
      "fcContent": "222222",
      "iconColorContent": "469bdd",
      "bgColorDefault": "dfeffc",
      "bgTextureDefault": "02_glass.png",
      "bgImgOpacityDefault": "85",
      "borderColorDefault": "c5dbec",
      "fcDefault": "2e6e9e",
      "iconColorDefault": "6da8d5",
      "bgColorHover": "d0e5f5",
      "bgTextureHover": "02_glass.png",
      "bgImgOpacityHover": "75",
      "borderColorHover": "79b7e7",
      "fcHover": "1d5987",
      "iconColorHover": "217bc0",
      "bgColorActive": "f5f8f9",
      "bgTextureActive": "06_inset_hard.png",
      "bgImgOpacityActive": "100",
      "borderColorActive": "79b7e7",
      "fcActive": "e17009",
      "iconColorActive": "f9bd01",
      "bgColorHighlight": "fbec88",
      "bgTextureHighlight": "01_flat.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "fad42e",
      "fcHighlight": "363636",
      "iconColorHighlight": "2e83ff",
      "bgColorError": "fef1ec",
      "bgTextureError": "02_glass.png",
      "bgImgOpacityError": "95",
      "borderColorError": "cd0a0a",
      "fcError": "cd0a0a",
      "iconColorError": "cd0a0a",
      "bgColorOverlay": "aaaaaa",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "0",
      "opacityOverlay": "30",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "30",
      "thicknessShadow": "8px",
      "offsetTopShadow": "-8px",
      "offsetLeftShadow": "-8px",
      "cornerRadiusShadow": "8px"
    },
    "Sunny": {
      "ffDefault": "Segoe UI, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "8px",
      "bgColorHeader": "817865",
      "bgTextureHeader": "12_gloss_wave.png",
      "bgImgOpacityHeader": "45",
      "borderColorHeader": "494437",
      "fcHeader": "ffffff",
      "iconColorHeader": "fadc7a",
      "bgColorContent": "feeebd",
      "bgTextureContent": "03_highlight_soft.png",
      "bgImgOpacityContent": "100",
      "borderColorContent": "8e846b",
      "fcContent": "383838",
      "iconColorContent": "d19405",
      "bgColorDefault": "fece2f",
      "bgTextureDefault": "12_gloss_wave.png",
      "bgImgOpacityDefault": "60",
      "borderColorDefault": "d19405",
      "fcDefault": "4c3000",
      "iconColorDefault": "3d3d3d",
      "bgColorHover": "ffdd57",
      "bgTextureHover": "12_gloss_wave.png",
      "bgImgOpacityHover": "70",
      "borderColorHover": "a45b13",
      "fcHover": "381f00",
      "iconColorHover": "bd7b00",
      "bgColorActive": "ffffff",
      "bgTextureActive": "05_inset_soft.png",
      "bgImgOpacityActive": "30",
      "borderColorActive": "655e4e",
      "fcActive": "0074c7",
      "iconColorActive": "eb990f",
      "bgColorHighlight": "fff9e5",
      "bgTextureHighlight": "12_gloss_wave.png",
      "bgImgOpacityHighlight": "90",
      "borderColorHighlight": "eeb420",
      "fcHighlight": "1f1f1f",
      "iconColorHighlight": "ed9f26",
      "bgColorError": "d34d17",
      "bgTextureError": "07_diagonals_medium.png",
      "bgImgOpacityError": "20",
      "borderColorError": "ffb73d",
      "fcError": "ffffff",
      "iconColorError": "ffe180",
      "bgColorOverlay": "5c5c5c",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "50",
      "opacityOverlay": "80",
      "bgColorShadow": "cccccc",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "30",
      "opacityShadow": "60",
      "thicknessShadow": "7px",
      "offsetTopShadow": "-7px",
      "offsetLeftShadow": "-7px",
      "cornerRadiusShadow": "8px"
    },
    "Le Frog": {
      "ffDefault": "Lucida Grande, Lucida Sans, Arial, sans-serif",
      "fwDefault": "normal",
      "fsDefault": "1.1em",
      "cornerRadius": "10px",
      "bgColorHeader": "3a8104",
      "bgTextureHeader": "03_highlight_soft.png",
      "bgImgOpacityHeader": "33",
      "borderColorHeader": "3f7506",
      "fcHeader": "ffffff",
      "iconColorHeader": "ffffff",
      "bgColorContent": "285c00",
      "bgTextureContent": "05_inset_soft.png",
      "bgImgOpacityContent": "10",
      "borderColorContent": "72b42d",
      "fcContent": "ffffff",
      "iconColorContent": "72b42d",
      "bgColorDefault": "4ca20b",
      "bgTextureDefault": "03_highlight_soft.png",
      "bgImgOpacityDefault": "60",
      "borderColorDefault": "45930b",
      "fcDefault": "ffffff",
      "iconColorDefault": "ffffff",
      "bgColorHover": "4eb305",
      "bgTextureHover": "03_highlight_soft.png",
      "bgImgOpacityHover": "50",
      "borderColorHover": "8bd83b",
      "fcHover": "ffffff",
      "iconColorHover": "ffffff",
      "bgColorActive": "285c00",
      "bgTextureActive": "04_highlight_hard.png",
      "bgImgOpacityActive": "30",
      "borderColorActive": "72b42d",
      "fcActive": "ffffff",
      "iconColorActive": "ffffff",
      "bgColorHighlight": "fbf5d0",
      "bgTextureHighlight": "02_glass.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "f9dd34",
      "fcHighlight": "363636",
      "iconColorHighlight": "4eb305",
      "bgColorError": "ffdc2e",
      "bgTextureError": "08_diagonals_thick.png",
      "bgImgOpacityError": "95",
      "borderColorError": "fad000",
      "fcError": "2b2b2b",
      "iconColorError": "cd0a0a",
      "bgColorOverlay": "444444",
      "bgTextureOverlay": "08_diagonals_thick.png",
      "bgImgOpacityOverlay": "15",
      "opacityOverlay": "30",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "07_diagonals_small.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "30",
      "thicknessShadow": "0px",
      "offsetTopShadow": "4px",
      "offsetLeftShadow": "4px",
      "cornerRadiusShadow": "4px"
    },
    "Flick": {
      "ffDefault": "Helvetica, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "2px",
      "bgColorHeader": "dddddd",
      "bgTextureHeader": "03_highlight_soft.png",
      "bgImgOpacityHeader": "50",
      "borderColorHeader": "dddddd",
      "fcHeader": "444444",
      "iconColorHeader": "0073ea",
      "bgColorContent": "ffffff",
      "bgTextureContent": "01_flat.png",
      "bgImgOpacityContent": "75",
      "borderColorContent": "dddddd",
      "fcContent": "444444",
      "iconColorContent": "ff0084",
      "bgColorDefault": "f6f6f6",
      "bgTextureDefault": "03_highlight_soft.png",
      "bgImgOpacityDefault": "100",
      "borderColorDefault": "dddddd",
      "fcDefault": "0073ea",
      "iconColorDefault": "666666",
      "bgColorHover": "0073ea",
      "bgTextureHover": "03_highlight_soft.png",
      "bgImgOpacityHover": "25",
      "borderColorHover": "0073ea",
      "fcHover": "ffffff",
      "iconColorHover": "ffffff",
      "bgColorActive": "ffffff",
      "bgTextureActive": "02_glass.png",
      "bgImgOpacityActive": "65",
      "borderColorActive": "dddddd",
      "fcActive": "ff0084",
      "iconColorActive": "454545",
      "bgColorHighlight": "ffffff",
      "bgTextureHighlight": "01_flat.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "cccccc",
      "fcHighlight": "444444",
      "iconColorHighlight": "0073ea",
      "bgColorError": "ffffff",
      "bgTextureError": "01_flat.png",
      "bgImgOpacityError": "55",
      "borderColorError": "ff0084",
      "fcError": "222222",
      "iconColorError": "ff0084",
      "bgColorOverlay": "eeeeee",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "0",
      "opacityOverlay": "80",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "60",
      "thicknessShadow": "4px",
      "offsetTopShadow": "-4px",
      "offsetLeftShadow": "-4px",
      "cornerRadiusShadow": "0px"
    },
    "Pepper Grinder": {
      "ffDefault": "Trebuchet MS, Tahoma, Verdana, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "6px",
      "bgColorHeader": "ffffff",
      "bgTextureHeader": "23_fine_grain.png",
      "bgImgOpacityHeader": "15",
      "borderColorHeader": "d4d1bf",
      "fcHeader": "453821",
      "iconColorHeader": "b83400",
      "bgColorContent": "eceadf",
      "bgTextureContent": "23_fine_grain.png",
      "bgImgOpacityContent": "10",
      "borderColorContent": "d9d6c4",
      "fcContent": "1f1f1f",
      "iconColorContent": "222222",
      "bgColorDefault": "f8f7f6",
      "bgTextureDefault": "23_fine_grain.png",
      "bgImgOpacityDefault": "10",
      "borderColorDefault": "cbc7bd",
      "fcDefault": "654b24",
      "iconColorDefault": "b83400",
      "bgColorHover": "654b24",
      "bgTextureHover": "23_fine_grain.png",
      "bgImgOpacityHover": "65",
      "borderColorHover": "654b24",
      "fcHover": "ffffff",
      "iconColorHover": "ffffff",
      "bgColorActive": "eceadf",
      "bgTextureActive": "23_fine_grain.png",
      "bgImgOpacityActive": "15",
      "borderColorActive": "d9d6c4",
      "fcActive": "140f06",
      "iconColorActive": "8c291d",
      "bgColorHighlight": "f7f3de",
      "bgTextureHighlight": "23_fine_grain.png",
      "bgImgOpacityHighlight": "15",
      "borderColorHighlight": "b2a266",
      "fcHighlight": "3a3427",
      "iconColorHighlight": "3572ac",
      "bgColorError": "b83400",
      "bgTextureError": "23_fine_grain.png",
      "bgImgOpacityError": "68",
      "borderColorError": "681818",
      "fcError": "ffffff",
      "iconColorError": "fbdb93",
      "bgColorOverlay": "6e4f1c",
      "bgTextureOverlay": "16_diagonal_maze.png",
      "bgImgOpacityOverlay": "20",
      "opacityOverlay": "60",
      "bgColorShadow": "000000",
      "bgTextureShadow": "16_diagonal_maze.png",
      "bgImgOpacityShadow": "40",
      "opacityShadow": "60",
      "thicknessShadow": "5px",
      "offsetTopShadow": "0",
      "offsetLeftShadow": "-10px",
      "cornerRadiusShadow": "18px"
    },
    "Eggplant": {
      "ffDefault": "Lucida Grande, Lucida Sans, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "6px",
      "bgColorHeader": "30273a",
      "bgTextureHeader": "03_highlight_soft.png",
      "bgImgOpacityHeader": "25",
      "borderColorHeader": "231d2b",
      "fcHeader": "ffffff",
      "iconColorHeader": "a8a3ae",
      "bgColorContent": "3d3644",
      "bgTextureContent": "12_gloss_wave.png",
      "bgImgOpacityContent": "30",
      "borderColorContent": "7e7783",
      "fcContent": "ffffff",
      "iconColorContent": "ffffff",
      "bgColorDefault": "dcd9de",
      "bgTextureDefault": "03_highlight_soft.png",
      "bgImgOpacityDefault": "100",
      "borderColorDefault": "dcd9de",
      "fcDefault": "665874",
      "iconColorDefault": "8d78a5",
      "bgColorHover": "eae6ea",
      "bgTextureHover": "03_highlight_soft.png",
      "bgImgOpacityHover": "100",
      "borderColorHover": "d1c5d8",
      "fcHover": "734d99",
      "iconColorHover": "734d99",
      "bgColorActive": "5f5964",
      "bgTextureActive": "03_highlight_soft.png",
      "bgImgOpacityActive": "45",
      "borderColorActive": "7e7783",
      "fcActive": "ffffff",
      "iconColorActive": "454545",
      "bgColorHighlight": "fafafa",
      "bgTextureHighlight": "01_flat.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "ffdb1f",
      "fcHighlight": "333333",
      "iconColorHighlight": "8d78a5",
      "bgColorError": "994d53",
      "bgTextureError": "01_flat.png",
      "bgImgOpacityError": "55",
      "borderColorError": "994d53",
      "fcError": "ffffff",
      "iconColorError": "ebccce",
      "bgColorOverlay": "eeeeee",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "0",
      "opacityOverlay": "80",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "60",
      "thicknessShadow": "4px",
      "offsetTopShadow": "-4px",
      "offsetLeftShadow": "-4px",
      "cornerRadiusShadow": "0px"
    },
    "Humanity": {
      "ffDefault": "Helvetica,Arial,sans-serif",
      "fwDefault": "normal",
      "fsDefault": "1.1em",
      "cornerRadius": "6px",
      "bgColorHeader": "cb842e",
      "bgTextureHeader": "02_glass.png",
      "bgImgOpacityHeader": "25",
      "borderColorHeader": "d49768",
      "fcHeader": "ffffff",
      "iconColorHeader": "ffffff",
      "bgColorContent": "f4f0ec",
      "bgTextureContent": "05_inset_soft.png",
      "bgImgOpacityContent": "100",
      "borderColorContent": "e0cfc2",
      "fcContent": "1e1b1d",
      "iconColorContent": "c47a23",
      "bgColorDefault": "ede4d4",
      "bgTextureDefault": "02_glass.png",
      "bgImgOpacityDefault": "70",
      "borderColorDefault": "cdc3b7",
      "fcDefault": "3f3731",
      "iconColorDefault": "f08000",
      "bgColorHover": "f5f0e5",
      "bgTextureHover": "02_glass.png",
      "bgImgOpacityHover": "100",
      "borderColorHover": "f5ad66",
      "fcHover": "a46313",
      "iconColorHover": "f08000",
      "bgColorActive": "f4f0ec",
      "bgTextureActive": "04_highlight_hard.png",
      "bgImgOpacityActive": "100",
      "borderColorActive": "e0cfc2",
      "fcActive": "b85700",
      "iconColorActive": "f35f07",
      "bgColorHighlight": "f5f5b5",
      "bgTextureHighlight": "04_highlight_hard.png",
      "bgImgOpacityHighlight": "75",
      "borderColorHighlight": "d9bb73",
      "fcHighlight": "060200",
      "iconColorHighlight": "cb672b",
      "bgColorError": "fee4bd",
      "bgTextureError": "04_highlight_hard.png",
      "bgImgOpacityError": "65",
      "borderColorError": "f8893f",
      "fcError": "592003",
      "iconColorError": "ff7519",
      "bgColorOverlay": "aaaaaa",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "75",
      "opacityOverlay": "30",
      "bgColorShadow": "aaaaaa",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "75",
      "opacityShadow": "30",
      "thicknessShadow": "8px",
      "offsetTopShadow": "-8px",
      "offsetLeftShadow": "-8px",
      "cornerRadiusShadow": "8px"
    },
    "Hot sneaks": {
      "ffDefault": "Gill Sans,Arial,sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.2em",
      "cornerRadius": "4px",
      "bgColorHeader": "35414f",
      "bgTextureHeader": "09_dots_small.png",
      "bgImgOpacityHeader": "35",
      "borderColorHeader": "2c4359",
      "fcHeader": "e1e463",
      "iconColorHeader": "e1e463",
      "bgColorContent": "ffffff",
      "bgTextureContent": "01_flat.png",
      "bgImgOpacityContent": "75",
      "borderColorContent": "aaaaaa",
      "fcContent": "2c4359",
      "iconColorContent": "c02669",
      "bgColorDefault": "93c3cd",
      "bgTextureDefault": "07_diagonals_small.png",
      "bgImgOpacityDefault": "50",
      "borderColorDefault": "93c3cd",
      "fcDefault": "333333",
      "iconColorDefault": "ffffff",
      "bgColorHover": "ccd232",
      "bgTextureHover": "07_diagonals_small.png",
      "bgImgOpacityHover": "75",
      "borderColorHover": "999999",
      "fcHover": "212121",
      "iconColorHover": "454545",
      "bgColorActive": "db4865",
      "bgTextureActive": "07_diagonals_small.png",
      "bgImgOpacityActive": "40",
      "borderColorActive": "ff6b7f",
      "fcActive": "ffffff",
      "iconColorActive": "ffffff",
      "bgColorHighlight": "ffff38",
      "bgTextureHighlight": "10_dots_medium.png",
      "bgImgOpacityHighlight": "80",
      "borderColorHighlight": "b4d100",
      "fcHighlight": "363636",
      "iconColorHighlight": "88a206",
      "bgColorError": "ff3853",
      "bgTextureError": "07_diagonals_small.png",
      "bgImgOpacityError": "50",
      "borderColorError": "ff6b7f",
      "fcError": "ffffff",
      "iconColorError": "ffeb33",
      "bgColorOverlay": "f7f7ba",
      "bgTextureOverlay": "11_white_lines.png",
      "bgImgOpacityOverlay": "85",
      "opacityOverlay": "80",
      "bgColorShadow": "ba9217",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "75",
      "opacityShadow": "20",
      "thicknessShadow": "10px",
      "offsetTopShadow": "8px",
      "offsetLeftShadow": "8px",
      "cornerRadiusShadow": "5px"
    },
    "Excite Bike": {
      "ffDefault": "segoe ui, Arial, sans-serif",
      "fwDefault": "bold",
      "fsDefault": "1.1em",
      "cornerRadius": "3px",
      "bgColorHeader": "f9f9f9",
      "bgTextureHeader": "03_highlight_soft.png",
      "bgImgOpacityHeader": "100",
      "borderColorHeader": "cccccc",
      "fcHeader": "e69700",
      "iconColorHeader": "5fa5e3",
      "bgColorContent": "eeeeee",
      "bgTextureContent": "06_inset_hard.png",
      "bgImgOpacityContent": "100",
      "borderColorContent": "aaaaaa",
      "fcContent": "222222",
      "iconColorContent": "0a82eb",
      "bgColorDefault": "1484e6",
      "bgTextureDefault": "08_diagonals_thick.png",
      "bgImgOpacityDefault": "22",
      "borderColorDefault": "ffffff",
      "fcDefault": "ffffff",
      "iconColorDefault": "fcdd4a",
      "bgColorHover": "2293f7",
      "bgTextureHover": "08_diagonals_thick.png",
      "bgImgOpacityHover": "26",
      "borderColorHover": "2293f7",
      "fcHover": "ffffff",
      "iconColorHover": "ffffff",
      "bgColorActive": "e69700",
      "bgTextureActive": "08_diagonals_thick.png",
      "bgImgOpacityActive": "20",
      "borderColorActive": "e69700",
      "fcActive": "ffffff",
      "iconColorActive": "ffffff",
      "bgColorHighlight": "c5ddfc",
      "bgTextureHighlight": "07_diagonals_small.png",
      "bgImgOpacityHighlight": "25",
      "borderColorHighlight": "ffffff",
      "fcHighlight": "333333",
      "iconColorHighlight": "0b54d5",
      "bgColorError": "e69700",
      "bgTextureError": "08_diagonals_thick.png",
      "bgImgOpacityError": "20",
      "borderColorError": "e69700",
      "fcError": "ffffff",
      "iconColorError": "ffffff",
      "bgColorOverlay": "e6b900",
      "bgTextureOverlay": "01_flat.png",
      "bgImgOpacityOverlay": "0",
      "opacityOverlay": "30",
      "bgColorShadow": "e69700",
      "bgTextureShadow": "01_flat.png",
      "bgImgOpacityShadow": "0",
      "opacityShadow": "20",
      "thicknessShadow": "0px",
      "offsetTopShadow": "6px",
      "offsetLeftShadow": "6px",
      "cornerRadiusShadow": "3px"
    },
    "Vader": {
      "ffDefault": "Helvetica, Arial, sans-serif",
      "fwDefault": "normal",
      "fsDefault": "1.1",
      "fsDefaultUnit": "em",
      "cornerRadius": "5",
      "cornerRadiusUnit": "px",
      "bgColorHeader": "888888",
      "bgTextureHeader": "04_highlight_hard.png",
      "bgImgOpacityHeader": "15",
      "borderColorHeader": "404040",
      "fcHeader": "ffffff",
      "iconColorHeader": "cccccc",
      "bgColorContent": "121212",
      "bgTextureContent": "12_gloss_wave.png",
      "bgImgOpacityContent": "16",
      "borderColorContent": "404040",
      "fcContent": "eeeeee",
      "iconColorContent": "bbbbbb",
      "bgColorDefault": "adadad",
      "bgTextureDefault": "03_highlight_soft.png",
      "bgImgOpacityDefault": "35",
      "borderColorDefault": "cccccc",
      "fcDefault": "333333",
      "iconColorDefault": "666666",
      "bgColorHover": "dddddd",
      "bgTextureHover": "03_highlight_soft.png",
      "bgImgOpacityHover": "60",
      "borderColorHover": "dddddd",
      "fcHover": "000000",
      "iconColorHover": "c98000",
      "bgColorActive": "121212",
      "bgTextureActive": "05_inset_soft.png",
      "bgImgOpacityActive": "15",
      "borderColorActive": "000000",
      "fcActive": "ffffff",
      "iconColorActive": "f29a00",
      "bgColorHighlight": "555555",
      "bgTextureHighlight": "04_highlight_hard.png",
      "bgImgOpacityHighlight": "55",
      "borderColorHighlight": "404040",
      "fcHighlight": "cccccc",
      "iconColorHighlight": "aaaaaa",
      "bgColorError": "fef1ec",
      "bgTextureError": "02_glass.png",
      "bgImgOpacityError": "95",
      "borderColorError": "cd0a0a",
      "fcError": "cd0a0a",
      "iconColorError": "cd0a0a"
    }
  };

}).call(this);
